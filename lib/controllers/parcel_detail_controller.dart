import 'package:get/get.dart';
import 'package:latlong2/latlong.dart';
import 'package:deliveryapp/services/orders_service.dart';

class ParcelDetailController extends GetxController {
  final OrdersService _ordersService = OrdersService();

  // üîπ State
  var isLoading = false.obs;
  var hasError = false.obs;

  // üîπ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏û‡∏±‡∏™‡∏î‡∏∏
  var parcel = {}.obs;

  // üîπ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö (‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Map)
  var receiverPosition = Rxn<LatLng>();

  /// ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏ï‡∏≤‡∏° orderId
  Future<void> fetchParcelDetail(String orderId) async {
    try {
      isLoading.value = true;
      hasError.value = false;

      final data = await _ordersService.getParcelDetail(orderId);

      if (data != null && data.isNotEmpty) {
        // ‚úÖ ‡∏î‡∏∂‡∏á address ‡πÅ‡∏•‡∏∞ proof image ‡πÉ‡∏´‡πâ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
        final address = data['address'] ?? {};
        final proofImage = data['proofImageUrl'] ?? data['proof_image'] ?? '';

        // ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö lat/lng ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô double ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
        final lat = double.tryParse(address['lat']?.toString() ?? '0') ?? 0;
        final lng = double.tryParse(address['lng']?.toString() ?? '0') ?? 0;

        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ parcel ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        parcel.value = {
          ...data,
          'address': {...address, 'lat': lat, 'lng': lng},
          'proofImageUrl': proofImage,
        };

        // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÉ‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
        if (lat != 0 && lng != 0) {
          receiverPosition.value = LatLng(lat, lng);
        } else {
          receiverPosition.value = null;
        }

        print("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${data['orderId']}");
        print("üìç ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö: ($lat, $lng)");
        if (proofImage.isNotEmpty) {
          print("üì∏ ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÅ‡∏ô‡∏ö: $proofImage");
        } else {
          print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÉ‡∏ô‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏ô‡∏µ‡πâ");
        }
      } else {
        parcel.value = {};
        hasError.value = true;
        print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏±‡∏™‡∏î‡∏∏‡πÉ‡∏ô response");
      }
    } catch (e) {
      print("üî• Error fetchParcelDetail: $e");
      hasError.value = true;
    } finally {
      isLoading.value = false;
    }
  }

  /// üè∑Ô∏è ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  String statusText(dynamic s) {
    if (s == 1) return "‡∏£‡∏≠‡πÑ‡∏£‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤";
    if (s == 2) return "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á";
    if (s == 3) return "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
    if (s == 4) return "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á";
    return "‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô";
  }

  /// üé® ‡∏™‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  int statusColor(dynamic s) {
    if (s == 1) return 0xFFFFA726; // ‡∏™‡πâ‡∏°
    if (s == 2) return 0xFF42A5F5; // ‡∏ü‡πâ‡∏≤
    if (s == 3) return 0xFF66BB6A; // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
    if (s == 4) return 0xFFE57373; // ‡πÅ‡∏î‡∏á (‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å)
    return 0xFF9E9E9E; // ‡πÄ‡∏ó‡∏≤ (default)
  }
}
