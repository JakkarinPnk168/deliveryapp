import 'package:flutter/material.dart';
import 'package:latlong2/latlong.dart';
import '../services/api_service.dart';
import '../models/address_model.dart';

class AddressAddController extends ChangeNotifier {
  final ApiService api;
  final Future<String?> Function() tokenProvider;

  AddressAddController({required this.api, required this.tokenProvider});

  // --- üîπ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ UI ---
  bool loading = false; // ‡πÉ‡∏ä‡πâ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏ï‡∏≠‡∏ô preload data
  bool locating = false; // ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏û‡∏¥‡∏Å‡∏±‡∏î
  bool saving = false; // ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
  String? errorMessage; // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠

  // --- üîπ ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà ---
  LatLng? selectedLocation;

  // --- üîπ Controllers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ---
  final labelController = TextEditingController(); // ‡πÄ‡∏ä‡πà‡∏ô "‡∏ö‡πâ‡∏≤‡∏ô", "‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
  final recipientNameController = TextEditingController(); // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
  final phoneController = TextEditingController();
  final addressDetailController = TextEditingController(); // ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà/‡∏ã‡∏≠‡∏¢/‡∏ñ‡∏ô‡∏ô
  final subDistrictController = TextEditingController(); // ‡πÅ‡∏Ç‡∏ß‡∏á/‡∏ï‡∏≥‡∏ö‡∏•
  final districtController = TextEditingController(); // ‡πÄ‡∏Ç‡∏ï/‡∏≠‡∏≥‡πÄ‡∏†‡∏≠
  final provinceController = TextEditingController(); // ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
  final postalCodeController = TextEditingController(); // ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå

  // ---------------------------------------------------------------------------
  // üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
  // ---------------------------------------------------------------------------
  void setSelected(LatLng position) {
    selectedLocation = position;
    notifyListeners();
  }

  // ---------------------------------------------------------------------------
  // üîπ ‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏à‡∏≤‡∏Å Geolocator)
  // ---------------------------------------------------------------------------
  Future<void> useCurrentLocation(
    Future<LatLng?> Function() getCurrentPosition,
  ) async {
    locating = true;
    errorMessage = null;
    notifyListeners();

    try {
      final current = await getCurrentPosition();
      if (current != null) {
        selectedLocation = current;
      } else {
        errorMessage = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πâ';
      }
    } catch (e) {
      errorMessage = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${e.toString()}';
    } finally {
      locating = false;
      notifyListeners();
    }
  }

  // ---------------------------------------------------------------------------
  // üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà
  // ---------------------------------------------------------------------------
  Future<bool> submit() async {
    if (saving) return false;
    if (selectedLocation == null) {
      errorMessage = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô';
      notifyListeners();
      return false;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
    if (addressDetailController.text.trim().isEmpty) {
      errorMessage = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô';
      notifyListeners();
      return false;
    }

    saving = true;
    errorMessage = null;
    notifyListeners();

    try {
      final token = await tokenProvider();
      if (token == null || token.isEmpty) {
        throw Exception('‡πÑ‡∏°‡πà‡∏û‡∏ö Token ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà');
      }

      // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á AddressModel
      final address = AddressModel(
        id: '',
        label: labelController.text.trim().isEmpty
            ? '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà'
            : labelController.text.trim(),
        recipientName: recipientNameController.text.trim(),
        phone: phoneController.text.trim(),
        addressLine: addressDetailController.text.trim(),
        subDistrict: subDistrictController.text.trim(),
        district: districtController.text.trim(),
        province: provinceController.text.trim(),
        postalCode: postalCodeController.text.trim(),
        lat: selectedLocation!.latitude,
        lng: selectedLocation!.longitude,
        isDefault: false,
      );

      // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡πà‡∏≤‡∏ô API ‚Üí Firestore backend
      await api.createAddress(token, address);

      saving = false;
      notifyListeners();
      return true;
    } catch (e) {
      errorMessage = '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${e.toString()}';
      saving = false;
      notifyListeners();
      return false;
    }
  }

  // ---------------------------------------------------------------------------
  // üîπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤
  // ---------------------------------------------------------------------------
  @override
  void dispose() {
    labelController.dispose();
    recipientNameController.dispose();
    phoneController.dispose();
    addressDetailController.dispose();
    subDistrictController.dispose();
    districtController.dispose();
    provinceController.dispose();
    postalCodeController.dispose();
    super.dispose();
  }
}
