import 'dart:io';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import '../services/auth_service.dart';

class RegisterRiderController {
  final TextEditingController phoneController = TextEditingController();
  final TextEditingController nameController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();
  final TextEditingController vehiclePlateController = TextEditingController();

  File? profileImage;
  File? vehicleImage;
  bool isSubmitting = false;

  final AuthService _authService;
  RegisterRiderController({AuthService? authService})
    : _authService = authService ?? AuthService();

  /// ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå +66 ‚Üí 0 ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
  String _normalizePhone(String input) {
    var s = input.trim().replaceAll(RegExp(r'[^0-9\+]'), '');
    if (s.startsWith('+66')) s = '0${s.substring(3)}';
    return s;
  }

  /// ‚úÖ ‡πÅ‡∏™‡∏î‡∏á SnackBar
  void _showSnack(BuildContext context, String msg) {
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(msg)));
  }

  /// ‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  Future<void> pickProfileImage() async {
    final picker = ImagePicker();
    final picked = await picker.pickImage(
      source: ImageSource.gallery,
      imageQuality: 85,
      maxWidth: 1280,
    );
    if (picked != null) {
      profileImage = File(picked.path);
      debugPrint('üì∑ ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: ${picked.path}');
    } else {
      debugPrint('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
    }
  }

  /// ‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞
  Future<void> pickVehicleImage() async {
    final picker = ImagePicker();
    final picked = await picker.pickImage(
      source: ImageSource.gallery,
      imageQuality: 85,
      maxWidth: 1280,
    );
    if (picked != null) {
      vehicleImage = File(picked.path);
      debugPrint('üöö ‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞: ${picked.path}');
    } else {
      debugPrint('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
    }
  }

  /// ‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Rider (multipart + handle backend)
  Future<bool> register(BuildContext context) async {
    if (isSubmitting) return false;

    final phone = _normalizePhone(phoneController.text);
    final name = nameController.text.trim();
    final pass = passwordController.text.trim();
    final plate = vehiclePlateController.text.trim();

    // üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö input ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
    if (phone.isEmpty || name.isEmpty || pass.isEmpty || plate.isEmpty) {
      _showSnack(context, '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö');
      return false;
    }

    // üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô 0XXXXXXXXX)
    if (!RegExp(r'^0\d{9}$').hasMatch(phone)) {
      _showSnack(context, '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÄ‡∏ä‡πà‡∏ô 0812345678)');
      return false;
    }

    if (pass.length < 6) {
      _showSnack(context, '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
      return false;
    }

    isSubmitting = true;

    try {
      await _authService.registerRider(
        phone: phone,
        password: pass,
        name: name,
        vehiclePlate: plate,
        profileImage: profileImage,
        vehicleImage: vehicleImage,
      );

      if (context.mounted) {
        _showSnack(context, '‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Rider ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üéâ');
        Navigator.pop(context, true);
      }
      return true;
    } on ApiException catch (e) {
      final msg = e.message;

      // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å backend ‡πÉ‡∏´‡πâ user ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à
      if (msg.contains('Rider ‡πÅ‡∏•‡πâ‡∏ß')) {
        _showSnack(context, '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Rider ‡πÅ‡∏•‡πâ‡∏ß');
      } else if (msg.contains('‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß')) {
        _showSnack(
          context,
          '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÉ‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Rider ‡πÑ‡∏î‡πâ)',
        );
      } else {
        _showSnack(context, msg);
      }
      return false;
    } catch (e) {
      _showSnack(context, '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: $e');
      return false;
    } finally {
      isSubmitting = false;
    }
  }

  /// ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ User ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤)
  void setInitialPhone(String? phone) {
    if (phone != null && phone.isNotEmpty) {
      phoneController.text = _normalizePhone(phone);
      debugPrint('üì± ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ${phoneController.text}');
    }
  }

  void dispose() {
    phoneController.dispose();
    nameController.dispose();
    passwordController.dispose();
    vehiclePlateController.dispose();
  }
}
